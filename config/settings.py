"""
–ò—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –ø—Ä–æ–µ–∫—Ç–∞ –¥–ª—è –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ –∫—Ä—É–ø–Ω—ã—Ö —Å–¥–µ–ª–æ–∫.
"""
import os
from typing import Dict, Any
from dotenv import load_dotenv

# –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
load_dotenv()

def get_env_int(key: str, default: int) -> int:
    """–ë–µ–∑–æ–ø–∞—Å–Ω–æ –ø–æ–ª—É—á–∞–µ—Ç integer –∏–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è."""
    try:
        value = os.getenv(key)
        if value is None:
            return default
        return int(value)
    except (ValueError, TypeError):
        return default

def get_env_bool(key: str, default: bool) -> bool:
    """–ë–µ–∑–æ–ø–∞—Å–Ω–æ –ø–æ–ª—É—á–∞–µ—Ç boolean –∏–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è."""
    value = os.getenv(key, '').lower()
    if value in ('true', '1', 'yes', 'on'):
        return True
    elif value in ('false', '0', 'no', 'off'):
        return False
    return default

# MySQL –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è
MYSQL_CONFIG: Dict[str, Any] = {
    'host': os.getenv('MYSQL_HOST', 'localhost'),
    'port': get_env_int('MYSQL_PORT', 3306),
    'user': os.getenv('MYSQL_USER', 'root'),
    'password': os.getenv('MYSQL_PASSWORD', ''),
    'db': os.getenv('MYSQL_DATABASE', 'crypto_db'),
}

# –û—Å–Ω–æ–≤–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
MIN_VOLUME_USD = get_env_int('MIN_VOLUME_USD', 1_000_000)
MIN_TRADE_VALUE_USD = get_env_int('MIN_TRADE_VALUE_USD', 49_000)
MAX_CONCURRENT_REQUESTS = get_env_int('MAX_CONCURRENT_REQUESTS', 3)
MAX_WEIGHT_PER_MINUTE = get_env_int('MAX_WEIGHT_PER_MINUTE', 1200)
DELAY_BETWEEN_REQUESTS = float(os.getenv('DELAY_BETWEEN_REQUESTS', '0.2'))
RETRY_DELAY = get_env_int('RETRY_DELAY', 5)
MAX_RETRIES = get_env_int('MAX_RETRIES', 3)
# –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –∫—ç—à–∞ —Ç–æ—Ä–≥–æ–≤—ã—Ö –ø–∞—Ä
PAIRS_CACHE_UPDATE_MINUTES = get_env_int('PAIRS_CACHE_UPDATE_MINUTES', 60)  # –ò–Ω—Ç–µ—Ä–≤–∞–ª –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –∫—ç—à–∞
PAIRS_CACHE_TTL_HOURS = get_env_int('PAIRS_CACHE_TTL_HOURS', 2)  # –í—Ä–µ–º—è –∂–∏–∑–Ω–∏ –∫—ç—à–∞
PAIRS_CACHE_CLEANUP_DAYS = get_env_int('PAIRS_CACHE_CLEANUP_DAYS', 7)  # –û—á–∏—Å—Ç–∫–∞ —Å—Ç–∞—Ä—ã—Ö –∑–∞–ø–∏—Å–µ–π

MONITORING_PAUSE_MINUTES = get_env_int('MONITORING_PAUSE_MINUTES', 5)
BATCH_SIZE = get_env_int('BATCH_SIZE', 30)
STATS_REPORT_MINUTES = get_env_int('STATS_REPORT_MINUTES', 10)
HEALTH_CHECK_MINUTES = get_env_int('HEALTH_CHECK_MINUTES', 15)
DISABLE_SSL_VERIFY = get_env_bool('DISABLE_SSL_VERIFY', False)
LOG_LEVEL = os.getenv('LOG_LEVEL', 'INFO').upper()

# –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –±–∏—Ä–∂
EXCHANGES_CONFIG = {
    'binance': {
        'api_url': 'https://api.binance.com',
        'trades_limit': get_env_int('BINANCE_TRADES_LIMIT', 1000),
        'cycle_pause_minutes': get_env_int('BINANCE_CYCLE_MINUTES', 5),
        'rate_limit': get_env_int('BINANCE_RATE_LIMIT', MAX_WEIGHT_PER_MINUTE),
        'enabled': get_env_bool('BINANCE_ENABLED', True),
        'weights': {
            'trades': 10,
            'exchange_info': 20,
            'tickers': 40
        }
    },
    'bybit': {
        'api_url': 'https://api.bybit.com',
        'trades_limit': get_env_int('BYBIT_TRADES_LIMIT', 60),
        'cycle_pause_minutes': get_env_int('BYBIT_CYCLE_MINUTES', 3),
        'rate_limit': get_env_int('BYBIT_RATE_LIMIT', MAX_WEIGHT_PER_MINUTE),
        'enabled': get_env_bool('BYBIT_ENABLED', True),
        'weights': {
            'trades': 1,
            'exchange_info': 1,
            'tickers': 1
        }
    },
    'coinbase': {
        'api_url': 'https://api.exchange.coinbase.com',
        'trades_limit': get_env_int('COINBASE_TRADES_LIMIT', 1000),
        'cycle_pause_minutes': get_env_int('COINBASE_CYCLE_MINUTES', 7),
        'rate_limit': get_env_int('COINBASE_RATE_LIMIT', 600),
        'enabled': get_env_bool('COINBASE_ENABLED', True),
        'weights': {
            'trades': 1,
            'exchange_info': 1,
            'tickers': 1
        }
    },
    'okx': {
        'api_url': 'https://www.okx.com',
        'trades_limit': get_env_int('OKX_TRADES_LIMIT', 100),
        'cycle_pause_minutes': get_env_int('OKX_CYCLE_MINUTES', 4),
        'rate_limit': get_env_int('OKX_RATE_LIMIT', MAX_WEIGHT_PER_MINUTE),
        'enabled': get_env_bool('OKX_ENABLED', True),  # ‚Üê –í–ê–ñ–ù–û: True!
        'weights': {
            'trades': 1,
            'exchange_info': 1,
            'tickers': 1
        }
    }
}

# –û—Ç–ª–∞–¥–æ—á–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è
if LOG_LEVEL == 'DEBUG':
    print("üîß –ó–∞–≥—Ä—É–∂–µ–Ω–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏:")
    print(f"  MySQL: {MYSQL_CONFIG['host']}:{MYSQL_CONFIG['port']}")
    print(f"  SSL –ø—Ä–æ–≤–µ—Ä–∫–∞: {'–æ—Ç–∫–ª—é—á–µ–Ω–∞' if DISABLE_SSL_VERIFY else '–≤–∫–ª—é—á–µ–Ω–∞'}")
    for exchange, config in EXCHANGES_CONFIG.items():
        if config['enabled']:
            print(f"  {exchange.upper()}: –ø–∞—É–∑–∞ {config['cycle_pause_minutes']}–º–∏–Ω, –ª–∏–º–∏—Ç {config['rate_limit']}/–º–∏–Ω")
        else:
            print(f"  {exchange.upper()}: –û–¢–ö–õ–Æ–ß–ï–ù")

# =================== –û–ü–¢–ò–ú–ò–ó–ê–¶–ò–Ø –ö–≠–®–ò–†–û–í–ê–ù–ò–Ø ===================

# –û—Å–Ω–æ–≤–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –∫—ç—à–∏—Ä–æ–≤–∞–Ω–∏—è
CACHE_OPTIMIZATION_ENABLED = get_env_bool('CACHE_OPTIMIZATION_ENABLED', True)
MEMORY_CACHE_ENABLED = get_env_bool('MEMORY_CACHE_ENABLED', True)
MEMORY_CACHE_TTL_MINUTES = get_env_int('MEMORY_CACHE_TTL_MINUTES', 30)
API_UPDATE_INTERVAL_MINUTES = get_env_int('API_UPDATE_INTERVAL_MINUTES', 60)
DB_CACHE_TTL_HOURS = get_env_int('DB_CACHE_TTL_HOURS', 2)

# –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ –∫—ç—à–∞
CACHE_METRICS_ENABLED = get_env_bool('CACHE_METRICS_ENABLED', True)
CACHE_FALLBACK_ENABLED = get_env_bool('CACHE_FALLBACK_ENABLED', True)
CACHE_DEBUG_LOGGING = get_env_bool('CACHE_DEBUG_LOGGING', False)

# –ü–æ—Ä–æ–≥–∏ –¥–ª—è –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏
CACHE_HIT_RATE_WARNING_THRESHOLD = get_env_int('CACHE_HIT_RATE_WARNING_THRESHOLD', 70)
API_CALLS_PER_HOUR_WARNING = get_env_int('API_CALLS_PER_HOUR_WARNING', 10)

if LOG_LEVEL == 'DEBUG':
    print("üöÄ –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –æ–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω–æ–≥–æ –∫—ç—à–∏—Ä–æ–≤–∞–Ω–∏—è –∑–∞–≥—Ä—É–∂–µ–Ω—ã")

# ============================================================
