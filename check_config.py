#!/usr/bin/env python3
"""
–ò—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω–∞—è –≤–µ—Ä—Å–∏—è —Å–∫—Ä–∏–ø—Ç–∞ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏.
"""
import sys
import os
from dotenv import load_dotenv


def check_config():
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç –≤—Å–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏."""
    print("üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ —Å–∏—Å—Ç–µ–º—ã...")

    # –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
    load_dotenv()

    errors = []
    warnings = []

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º .env —Ñ–∞–π–ª
    if not os.path.exists('.env'):
        warnings.append("–§–∞–π–ª .env –Ω–µ –Ω–∞–π–¥–µ–Ω, –∏—Å–ø–æ–ª—å–∑—É—é—Ç—Å—è –∑–Ω–∞—á–µ–Ω–∏—è –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é")
        print("‚ö†Ô∏è  –§–∞–π–ª .env –Ω–µ –Ω–∞–π–¥–µ–Ω")
    else:
        print("‚úÖ –§–∞–π–ª .env –Ω–∞–π–¥–µ–Ω")

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º MySQL –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
    print("\nüíæ MySQL –Ω–∞—Å—Ç—Ä–æ–π–∫–∏:")
    mysql_settings = {
        'MYSQL_HOST': os.getenv('MYSQL_HOST', 'localhost'),
        'MYSQL_PORT': os.getenv('MYSQL_PORT', '3306'),
        'MYSQL_USER': os.getenv('MYSQL_USER', 'root'),
        'MYSQL_PASSWORD': os.getenv('MYSQL_PASSWORD', ''),
        'MYSQL_DATABASE': os.getenv('MYSQL_DATABASE', 'crypto_db')
    }

    for key, value in mysql_settings.items():
        if key == 'MYSQL_PASSWORD':
            display_value = '***' if value else '–ù–ï –£–°–¢–ê–ù–û–í–õ–ï–ù'
        else:
            display_value = value
        print(f"  {key}: {display_value}")

    if not mysql_settings['MYSQL_PASSWORD']:
        warnings.append("MySQL –ø–∞—Ä–æ–ª—å –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")

    # –¢–µ—Å—Ç–∏—Ä—É–µ–º –∏–º–ø–æ—Ä—Ç –Ω–∞—Å—Ç—Ä–æ–µ–∫
    print("\nüîß –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏–º–ø–æ—Ä—Ç–∞ –Ω–∞—Å—Ç—Ä–æ–µ–∫...")
    try:
        from config.settings import EXCHANGES_CONFIG, LOG_LEVEL, MIN_VOLUME_USD
        print("‚úÖ –ù–∞—Å—Ç—Ä–æ–π–∫–∏ —É—Å–ø–µ—à–Ω–æ –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω—ã")
        print(f"  LOG_LEVEL: {LOG_LEVEL}")
        print(f"  MIN_VOLUME_USD: ${MIN_VOLUME_USD:,}")

    except Exception as e:
        errors.append(f"–ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –∏–º–ø–æ—Ä—Ç–∞ –Ω–∞—Å—Ç—Ä–æ–µ–∫: {e}")
        print(f"‚ùå –û—à–∏–±–∫–∞ –∏–º–ø–æ—Ä—Ç–∞ –Ω–∞—Å—Ç—Ä–æ–µ–∫: {e}")
        return False

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é –±–∏—Ä–∂
    print("\nüè¶ –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –±–∏—Ä–∂:")
    enabled_exchanges = []
    disabled_exchanges = []

    # –ò—Å–ø–æ–ª—å–∑—É–µ–º —Ä–µ–∞–ª—å–Ω—É—é —Å—Ç—Ä—É–∫—Ç—É—Ä—É –∏–∑ –∑–∞–≥—Ä—É–∂–µ–Ω–Ω–æ–π –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
    for exchange, config in EXCHANGES_CONFIG.items():
        try:
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–µ–∞–ª—å–Ω–æ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ –ø–æ–ª—è
            has_url = 'api_url' in config
            has_limit = 'trades_limit' in config
            has_pause = 'cycle_pause_minutes' in config
            has_rate = 'rate_limit' in config
            has_weights = 'weights' in config
            is_enabled = config.get('enabled', True)

            missing_fields = []
            if not has_url: missing_fields.append('api_url')
            if not has_limit: missing_fields.append('trades_limit')
            if not has_pause: missing_fields.append('cycle_pause_minutes')
            if not has_rate: missing_fields.append('rate_limit')
            if not has_weights: missing_fields.append('weights')

            if missing_fields:
                errors.append(f"–ë–∏—Ä–∂–∞ {exchange}: –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç –ø–æ–ª—è {missing_fields}")
                print(f"  ‚ùå {exchange.upper()}: –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç –ø–æ–ª—è {missing_fields}")
            else:
                if is_enabled:
                    enabled_exchanges.append(exchange)
                    print(f"  ‚úÖ {exchange.upper()}: –≤—Å–µ –ø–æ–ª—è –ø—Ä–∏—Å—É—Ç—Å—Ç–≤—É—é—Ç (–≤–∫–ª—é—á–µ–Ω–∞)")
                else:
                    disabled_exchanges.append(exchange)
                    print(f"  ‚èπÔ∏è  {exchange.upper()}: –≤—Å–µ –ø–æ–ª—è –ø—Ä–∏—Å—É—Ç—Å—Ç–≤—É—é—Ç (–æ—Ç–∫–ª—é—á–µ–Ω–∞)")

        except Exception as e:
            errors.append(f"–û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ {exchange}: {e}")
            print(f"  ‚ùå {exchange.upper()}: –æ—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ - {e}")

    if not enabled_exchanges:
        errors.append("–í—Å–µ –±–∏—Ä–∂–∏ –æ—Ç–∫–ª—é—á–µ–Ω—ã! –í–∫–ª—é—á–∏—Ç–µ —Ö–æ—Ç—è –±—ã –æ–¥–Ω—É –±–∏—Ä–∂—É.")
        print("‚ùå –í—Å–µ –±–∏—Ä–∂–∏ –æ—Ç–∫–ª—é—á–µ–Ω—ã!")
    else:
        print(f"\nüìä –ê–∫—Ç–∏–≤–Ω—ã–µ –±–∏—Ä–∂–∏: {', '.join(enabled_exchanges)}")
        if disabled_exchanges:
            print(f"üí§ –û—Ç–∫–ª—é—á–µ–Ω–Ω—ã–µ –±–∏—Ä–∂–∏: {', '.join(disabled_exchanges)}")

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ (–∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω–∞—è –ª–æ–≥–∏–∫–∞)
    print("\nüì¶ –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π:")
    dependencies_check = [
        ('aiohttp', 'aiohttp'),
        ('aiomysql', 'aiomysql'),
        ('dateutil', 'python-dateutil'),
        ('dotenv', 'python-dotenv')
    ]

    for import_name, package_name in dependencies_check:
        try:
            __import__(import_name)
            print(f"  ‚úÖ {package_name}")
        except ImportError:
            # –≠—Ç–æ –Ω–µ –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –µ—Å–ª–∏ main.py —Ä–∞–±–æ—Ç–∞–µ—Ç
            warnings.append(f"–ü–∞–∫–µ—Ç {package_name} –Ω–µ –Ω–∞–π–¥–µ–Ω –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ (–Ω–æ –º–æ–∂–µ—Ç –±—ã—Ç—å —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω)")
            print(f"  ‚ö†Ô∏è  {package_name} (–ø—Ä–æ–≤–µ—Ä—å—Ç–µ —É—Å—Ç–∞–Ω–æ–≤–∫—É)")

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç—Ä—É–∫—Ç—É—Ä—É –ø—Ä–æ–µ–∫—Ç–∞
    print("\nüìÅ –°—Ç—Ä—É–∫—Ç—É—Ä–∞ –ø—Ä–æ–µ–∫—Ç–∞:")
    required_dirs = [
        'config', 'database', 'exchanges/binance',
        'exchanges/bybit', 'exchanges/coinbase',
        'utils', 'workers'
    ]

    for dir_path in required_dirs:
        if os.path.exists(dir_path):
            print(f"  ‚úÖ {dir_path}/")
        else:
            errors.append(f"–û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è: {dir_path}")
            print(f"  ‚ùå {dir_path}/")

    # –†–µ–∑—É–ª—å—Ç–∞—Ç—ã –ø—Ä–æ–≤–µ—Ä–∫–∏
    print(f"\n{'=' * 60}")
    if errors:
        print("‚ùå –ù–ê–ô–î–ï–ù–ù–´–ï –ü–†–û–ë–õ–ï–ú–´:")
        for error in errors:
            print(f"  - {error}")

    if warnings:
        print("‚ö†Ô∏è  –ü–†–ï–î–£–ü–†–ï–ñ–î–ï–ù–ò–Ø:")
        for warning in warnings:
            print(f"  - {warning}")

    # –§–∏–Ω–∞–ª—å–Ω–∞—è –æ—Ü–µ–Ω–∫–∞
    critical_errors = [e for e in errors if
                       any(word in e.lower() for word in ['–∫—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è', '–æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è', '–∏–º–ø–æ—Ä—Ç'])]

    if not critical_errors:
        if errors:
            print("‚úÖ –°–ò–°–¢–ï–ú–ê –ì–û–¢–û–í–ê –ö –†–ê–ë–û–¢–ï (–µ—Å—Ç—å –Ω–µ–∑–Ω–∞—á–∏—Ç–µ–ª—å–Ω—ã–µ –ø—Ä–æ–±–ª–µ–º—ã)")
            print("üí° –ï—Å–ª–∏ main.py –∑–∞–ø—É—Å–∫–∞–µ—Ç—Å—è –Ω–æ—Ä–º–∞–ª—å–Ω–æ, –º–æ–∂–Ω–æ –∏–≥–Ω–æ—Ä–∏—Ä–æ–≤–∞—Ç—å –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏—è –æ –ø–∞–∫–µ—Ç–∞—Ö")
        else:
            print("üéâ –í–°–ï –ü–†–û–í–ï–†–ö–ò –ü–†–û–ô–î–ï–ù–´! –°–∏—Å—Ç–µ–º–∞ –≥–æ—Ç–æ–≤–∞ –∫ —Ä–∞–±–æ—Ç–µ.")
        return True
    else:
        print("üí• –û–ë–ù–ê–†–£–ñ–ï–ù–´ –ö–†–ò–¢–ò–ß–ï–°–ö–ò–ï –û–®–ò–ë–ö–ò!")
        return False


if __name__ == "__main__":
    success = check_config()

    if success:
        print(f"\nüöÄ –ú–æ–∂–Ω–æ –∑–∞–ø—É—Å–∫–∞—Ç—å: python main.py")
    else:
        print(f"\nüîß –ò—Å–ø—Ä–∞–≤—å—Ç–µ –æ—à–∏–±–∫–∏ –ø–µ—Ä–µ–¥ –∑–∞–ø—É—Å–∫–æ–º")

    sys.exit(0 if success else 1)